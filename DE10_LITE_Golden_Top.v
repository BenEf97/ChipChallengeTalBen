
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE10_LITE_Golden_Top(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,
	input 		          		MAX10_CLK1_50,
	input 		          		MAX10_CLK2_50,

	//////////// SDRAM //////////
	output		    [12:0]		DRAM_ADDR,
	output		     [1:0]		DRAM_BA,
	output		          		DRAM_CAS_N,
	output		          		DRAM_CKE,
	output		          		DRAM_CLK,
	output		          		DRAM_CS_N,
	inout 		    [15:0]		DRAM_DQ,
	output		          		DRAM_LDQM,
	output		          		DRAM_RAS_N,
	output		          		DRAM_UDQM,
	output		          		DRAM_WE_N,

	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// VGA //////////
	output		     [3:0]		VGA_B,
	output		     [3:0]		VGA_G,
	output		          		VGA_HS,
	output		     [3:0]		VGA_R,
	output		          		VGA_VS,

	//////////// Accelerometer //////////
	output		          		GSENSOR_CS_N,
	input 		     [2:1]		GSENSOR_INT,
	output		          		GSENSOR_SCLK,
	inout 		          		GSENSOR_SDI,
	inout 		          		GSENSOR_SDO,

	//////////// Arduino //////////
	inout 		    [15:0]		ARDUINO_IO,
	inout 		          		ARDUINO_RESET_N,

	//////////// GPIO, GPIO connect to GPIO Default //////////
	inout 		    [35:0]		GPIO
);



//=======================================================
//  REG/WIRE declarations
//=======================================================


wire [5:0] Sec; //Wire 0 to 60
wire [5:0] Min; //Wire 0 to 60
wire [4:0] Hour; //Wire 0 to 24


//=======================================================
//  Structural coding
//=======================================================



//========CLOCK======
ClockProject Clock(.clk(MAX10_CLK1_50), .resetN(KEY[0]), .StartN(KEY[1]), .outSec(Sec) , .outMin(Min), .outHour(Hour));



//=====7 Segment====

//Seconds display

//Units display
HEXDRV HEXDRV0 (.switch((Sec%10)),.segments(HEX0));

//Tens display
HEXDRV HEXDRV1 (.switch(((Sec/10)%10)),.segments(HEX1));


//Minutes display

//Units display
HEXDRV HEXDRV2 (.switch((Min%10)),.segments(HEX2));

//Tens display
HEXDRV HEXDRV3 (.switch(((Min/10)%10)),.segments(HEX3));


//Hours display

//Units display
HEXDRV HEXDRV4 (.switch((Hour%10)),.segments(HEX4));

//Tens display
HEXDRV HEXDRV5 (.switch(((Hour/10)%10)),.segments(HEX5));



//assign LEDR[0] = ~(SW[0] & SW[1]);
//assign LEDR[1] = ~KEY[0] | ~KEY[1] ;

//HEXDRV HEXDRV1 (.switch(SW[9:6]),.segments(HEX5));

//HEXDRV HEXDRV2 (.switch(SW[5:2]),.segments(HEX0));


endmodule
